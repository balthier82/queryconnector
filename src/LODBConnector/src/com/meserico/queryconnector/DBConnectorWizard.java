/*
    QueryConnector - Attach a query to a Calc document
    Copyright (C) 2013 Enrico Giuseppe Messina

    This library is free software; you can redistribute it and/or
    modify it under the terms of the GNU Lesser General Public
    License as published by the Free Software Foundation; either
    version 2.1 of the License, or (at your option) any later version.

    This library is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
    Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public
    License along with this library; if not, write to the Free Software
    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
 */
package com.meserico.queryconnector;

import java.awt.*;
import java.sql.*;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JRadioButton;
import javax.xml.parsers.DocumentBuilderFactory;
import org.w3c.dom.CDATASection;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.NodeList;

/**
 *
 * @author Enrico Messina
 */
public class DBConnectorWizard extends JExtDialog {

    private WizardListener listener; 
    private int lastStep;
    private ODBCSource dbSource;
    private DBConnection connection;
    
    /**
     * Creates new form DBConnectorWizard
     */
    public DBConnectorWizard(WizardListener listener) {
        super((Dialog)null, false);
        this.dbSource = new ODBCSource(null);
        this.listener = listener;
        initComponents();
        this.setSize(722, 476);
        this.loadDrivers();
        this.errorTextStep1.setText("");
        this.errorTextStep2.setText("");
        this.changePage(0);
        if(OS.isWindows())
            parameterContainer.setPreferredSize(new Dimension(0, 125));
        else parameterContainer.setPreferredSize(new Dimension(0, 135));
        this.pack();
        this.centerOnScreen();
    }
    
    /**
     * Creates new form DBConnectorWizard
     */
    public DBConnectorWizard(){
        this(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        connectionButtonGroup = new javax.swing.ButtonGroup();
        wizardSteps = new ImagePanel();
        jPanel21 = new javax.swing.JPanel();
        stepsTitle = new javax.swing.JLabel();
        step1 = new com.meserico.queryconnector.StepLabel();
        step2 = new com.meserico.queryconnector.StepLabel();
        step3 = new com.meserico.queryconnector.StepLabel();
        step4 = new com.meserico.queryconnector.StepLabel();
        wizardContainer = new javax.swing.JPanel();
        waitingPanel = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        firstStep = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jPanel20 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        firstStepButtonContainer = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        abortStep0 = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        toStep1Btn = new javax.swing.JButton();
        dbConnectionStep = new javax.swing.JPanel();
        dbConnectionStepButtonPanel = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        abortStep1 = new javax.swing.JButton();
        jPanel11 = new javax.swing.JPanel();
        toStep2Btn = new javax.swing.JButton();
        dbConnectionStepCenterPanel = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        chooseODBCDriver = new javax.swing.JRadioButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        configODBC = new javax.swing.JButton();
        odbcState = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        chooseJDBCDriver = new javax.swing.JRadioButton();
        jPanel6 = new javax.swing.JPanel();
        parameterContainer = new javax.swing.JPanel();
        leftParameterContainer = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        centerParameterContainer = new javax.swing.JPanel();
        driverListContainer = new javax.swing.JPanel();
        jdbcDriver = new javax.swing.JComboBox();
        testDriverClass = new javax.swing.JButton();
        jdbcUrl = new javax.swing.JTextField();
        username = new javax.swing.JTextField();
        password = new javax.swing.JPasswordField();
        jPanel4 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        errorTextStep1 = new javax.swing.JLabel();
        queryStep = new javax.swing.JPanel();
        queryTextAreaContainer = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        querySQLScrollPane = new javax.swing.JScrollPane();
        querySQL = new javax.swing.JTextArea();
        errorTextStep2 = new javax.swing.JLabel();
        queryStepButtonContainer = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        abortStep2 = new javax.swing.JButton();
        backToStep1Btn = new javax.swing.JButton();
        jPanel13 = new javax.swing.JPanel();
        toStep3Btn = new javax.swing.JButton();
        queryResultStep = new javax.swing.JPanel();
        queryPreviewContainer = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        queryResultScrollPane = new javax.swing.JScrollPane();
        queryResult = new ResultSetTable();
        queryResultStepButtonContainer = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        abortStep3 = new javax.swing.JButton();
        backToStep2Btn = new javax.swing.JButton();
        jPanel15 = new javax.swing.JPanel();
        toStep4Btn = new javax.swing.JButton();
        endingStep = new javax.swing.JPanel();
        jPanel16 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jPanel17 = new javax.swing.JPanel();
        settingsLabel = new javax.swing.JLabel();
        saveConnectionInfo = new javax.swing.JCheckBox();
        saveInformationWarning = new javax.swing.JLabel();
        endingStepButtonContainer = new javax.swing.JPanel();
        jPanel18 = new javax.swing.JPanel();
        abortStep4 = new javax.swing.JButton();
        backToStep3Btn = new javax.swing.JButton();
        jPanel19 = new javax.swing.JPanel();
        confirmButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("com/meserico/queryconnector/languages"); // NOI18N
        setTitle(bundle.getString("WIZARD_MAIN_LABEL")); // NOI18N
        setName("dbconnectionwizard"); // NOI18N
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        ((ImagePanel) wizardSteps).setImageFromPackage("queryconnector.png");
        ((ImagePanel) wizardSteps).setImageAlpha(0.3f);
        wizardSteps.setBackground(new java.awt.Color(255, 255, 255));
        wizardSteps.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        wizardSteps.setPreferredSize(new java.awt.Dimension(190, 382));
        wizardSteps.setLayout(new java.awt.BorderLayout());

        jPanel21.setBorder(javax.swing.BorderFactory.createEmptyBorder(8, 8, 8, 8));
        jPanel21.setOpaque(false);
        jPanel21.setLayout(new java.awt.GridLayout(5, 0, 0, 5));

        stepsTitle.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        stepsTitle.setForeground(new java.awt.Color(0, 51, 102));
        stepsTitle.setText(bundle.getString("STEPS_LABEL")); // NOI18N
        jPanel21.add(stepsTitle);

        step1.setText(bundle.getString("FIRST_STEP_DB_CONNECTION")); // NOI18N
        step1.setName("step1"); // NOI18N
        jPanel21.add(step1);

        step2.setText(bundle.getString("SECOND_STEP_QUERY")); // NOI18N
        step2.setName("step2"); // NOI18N
        jPanel21.add(step2);

        step3.setText(bundle.getString("THIRD_STEP_RESULT_PREVIEW")); // NOI18N
        step3.setName("step3"); // NOI18N
        jPanel21.add(step3);

        step4.setText(bundle.getString("ENDING_STEP")); // NOI18N
        step4.setName("step4"); // NOI18N
        jPanel21.add(step4);

        wizardSteps.add(jPanel21, java.awt.BorderLayout.NORTH);

        getContentPane().add(wizardSteps, java.awt.BorderLayout.WEST);

        wizardContainer.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        wizardContainer.setPreferredSize(new java.awt.Dimension(600, 446));
        wizardContainer.setLayout(new java.awt.CardLayout());

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText(bundle.getString("WAITING_PLEASE_LABEL")); // NOI18N

        javax.swing.GroupLayout waitingPanelLayout = new javax.swing.GroupLayout(waitingPanel);
        waitingPanel.setLayout(waitingPanelLayout);
        waitingPanelLayout.setHorizontalGroup(
            waitingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(waitingPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, 536, Short.MAX_VALUE)
                .addContainerGap())
        );
        waitingPanelLayout.setVerticalGroup(
            waitingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(waitingPanelLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel12)
                .addContainerGap(379, Short.MAX_VALUE))
        );

        wizardContainer.add(waitingPanel, "waiting");

        firstStep.setLayout(new java.awt.BorderLayout(0, 100));

        jPanel7.setLayout(new java.awt.BorderLayout(0, 30));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText(bundle.getString("QUERY_CONNECTION_WIZARD")); // NOI18N
        jPanel7.add(jLabel8, java.awt.BorderLayout.CENTER);

        jPanel20.setLayout(new java.awt.GridLayout(2, 0));

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText(bundle.getString("START_HINT_LABEL")); // NOI18N
        jPanel20.add(jLabel9);

        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText(bundle.getString("CANCEL_HINT_LABEL")); // NOI18N
        jPanel20.add(jLabel10);

        jPanel7.add(jPanel20, java.awt.BorderLayout.SOUTH);

        firstStep.add(jPanel7, java.awt.BorderLayout.CENTER);

        firstStepButtonContainer.setPreferredSize(new java.awt.Dimension(854, 47));
        firstStepButtonContainer.setLayout(new java.awt.BorderLayout());

        jPanel9.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 10, 5));

        abortStep0.setText(bundle.getString("CANCEL_BUTTON")); // NOI18N
        abortStep0.setPreferredSize(new java.awt.Dimension(120, 25));
        abortStep0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                abortStep0ActionPerformed(evt);
            }
        });
        jPanel9.add(abortStep0);

        firstStepButtonContainer.add(jPanel9, java.awt.BorderLayout.CENTER);

        jPanel10.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT, 10, 5));

        toStep1Btn.setText(bundle.getString("START_BUTTON")); // NOI18N
        toStep1Btn.setPreferredSize(new java.awt.Dimension(120, 25));
        toStep1Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toStep1BtnActionPerformed(evt);
            }
        });
        jPanel10.add(toStep1Btn);

        firstStepButtonContainer.add(jPanel10, java.awt.BorderLayout.EAST);

        firstStep.add(firstStepButtonContainer, java.awt.BorderLayout.SOUTH);

        wizardContainer.add(firstStep, "step0");

        dbConnectionStep.setLayout(new java.awt.BorderLayout());

        dbConnectionStepButtonPanel.setPreferredSize(new java.awt.Dimension(280, 47));
        dbConnectionStepButtonPanel.setLayout(new java.awt.BorderLayout());

        jPanel8.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 10, 5));

        abortStep1.setText(bundle.getString("CANCEL_BUTTON")); // NOI18N
        abortStep1.setPreferredSize(new java.awt.Dimension(120, 25));
        abortStep1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                abortStep1ActionPerformed(evt);
            }
        });
        jPanel8.add(abortStep1);

        dbConnectionStepButtonPanel.add(jPanel8, java.awt.BorderLayout.CENTER);

        jPanel11.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT, 10, 5));

        toStep2Btn.setText(bundle.getString("FORWARD_BUTTON")); // NOI18N
        toStep2Btn.setPreferredSize(new java.awt.Dimension(120, 25));
        toStep2Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toStep2BtnActionPerformed(evt);
            }
        });
        jPanel11.add(toStep2Btn);

        dbConnectionStepButtonPanel.add(jPanel11, java.awt.BorderLayout.EAST);

        dbConnectionStep.add(dbConnectionStepButtonPanel, java.awt.BorderLayout.SOUTH);

        dbConnectionStepCenterPanel.setLayout(new java.awt.BorderLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createEmptyBorder(8, 8, 8, 8));
        jPanel1.setLayout(new java.awt.BorderLayout(0, 8));

        connectionButtonGroup.add(chooseODBCDriver);
        chooseODBCDriver.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        chooseODBCDriver.setSelected(true);
        chooseODBCDriver.setText(bundle.getString("RADIO_ODBC_CONNECTION_TEXT")); // NOI18N
        chooseODBCDriver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseODBCDriverActionPerformed(evt);
            }
        });
        jPanel1.add(chooseODBCDriver, java.awt.BorderLayout.NORTH);

        jPanel2.setLayout(new java.awt.BorderLayout(0, 8));

        jPanel3.setLayout(new java.awt.BorderLayout(10, 0));

        configODBC.setText(bundle.getString("SELECT_ODBC_SOURCE_BUTTON")); // NOI18N
        configODBC.setPreferredSize(new java.awt.Dimension(190, 23));
        configODBC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                configODBCActionPerformed(evt);
            }
        });
        jPanel3.add(configODBC, java.awt.BorderLayout.WEST);

        odbcState.setText(bundle.getString("NOT_SELECTED_ODBC_SOURCE_LABEL")); // NOI18N
        jPanel3.add(odbcState, java.awt.BorderLayout.CENTER);

        jPanel2.add(jPanel3, java.awt.BorderLayout.PAGE_START);

        jPanel5.setLayout(new java.awt.BorderLayout(0, 8));

        connectionButtonGroup.add(chooseJDBCDriver);
        chooseJDBCDriver.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        chooseJDBCDriver.setText(bundle.getString("RADIO_JDBC_CONNECTION_TEXT")); // NOI18N
        chooseJDBCDriver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseJDBCDriverActionPerformed(evt);
            }
        });
        jPanel5.add(chooseJDBCDriver, java.awt.BorderLayout.NORTH);

        jPanel6.setLayout(new java.awt.BorderLayout());

        parameterContainer.setPreferredSize(new java.awt.Dimension(100, 135));
        parameterContainer.setLayout(new java.awt.BorderLayout(15, 0));

        leftParameterContainer.setLayout(new java.awt.GridLayout(4, 0, 20, 9));

        jLabel1.setText("Driver JDBC:");
        leftParameterContainer.add(jLabel1);

        jLabel2.setText("JDBC Url:");
        leftParameterContainer.add(jLabel2);

        jLabel4.setText("Username:");
        leftParameterContainer.add(jLabel4);

        jLabel5.setText(bundle.getString("PASSWORD")); // NOI18N
        leftParameterContainer.add(jLabel5);

        parameterContainer.add(leftParameterContainer, java.awt.BorderLayout.WEST);

        centerParameterContainer.setLayout(new java.awt.GridLayout(4, 0, 20, 9));

        driverListContainer.setLayout(new java.awt.BorderLayout(15, 0));

        jdbcDriver.setToolTipText("Driver JDBC");
        jdbcDriver.setEnabled(false);
        jdbcDriver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jdbcDriverActionPerformed(evt);
            }
        });
        driverListContainer.add(jdbcDriver, java.awt.BorderLayout.CENTER);

        testDriverClass.setText("Test");
        testDriverClass.setPreferredSize(new java.awt.Dimension(100, 23));
        testDriverClass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                testDriverClassActionPerformed(evt);
            }
        });
        driverListContainer.add(testDriverClass, java.awt.BorderLayout.EAST);

        centerParameterContainer.add(driverListContainer);

        jdbcUrl.setToolTipText(bundle.getString("SERVER_IP_TOOL_TIP")); // NOI18N
        jdbcUrl.setEnabled(false);
        centerParameterContainer.add(jdbcUrl);

        username.setToolTipText(bundle.getString("USERNAME_TOOL_TIP")); // NOI18N
        username.setEnabled(false);
        centerParameterContainer.add(username);

        password.setToolTipText(bundle.getString("PASSWORD_TOOL_TIP")); // NOI18N
        password.setEnabled(false);
        centerParameterContainer.add(password);

        parameterContainer.add(centerParameterContainer, java.awt.BorderLayout.CENTER);

        jPanel6.add(parameterContainer, java.awt.BorderLayout.NORTH);

        jPanel5.add(jPanel6, java.awt.BorderLayout.CENTER);

        jPanel2.add(jPanel5, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel2, java.awt.BorderLayout.CENTER);

        jPanel4.setLayout(new java.awt.BorderLayout(0, 15));

        jLabel7.setText(bundle.getString("CONNECTION_PARAMS_COMPILATION_HINT")); // NOI18N
        jPanel4.add(jLabel7, java.awt.BorderLayout.CENTER);

        errorTextStep1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        errorTextStep1.setForeground(new java.awt.Color(255, 51, 51));
        errorTextStep1.setText("<errore>");
        errorTextStep1.setToolTipText("");
        errorTextStep1.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        errorTextStep1.setPreferredSize(new java.awt.Dimension(54, 35));
        jPanel4.add(errorTextStep1, java.awt.BorderLayout.SOUTH);

        jPanel1.add(jPanel4, java.awt.BorderLayout.SOUTH);

        dbConnectionStepCenterPanel.add(jPanel1, java.awt.BorderLayout.CENTER);

        dbConnectionStep.add(dbConnectionStepCenterPanel, java.awt.BorderLayout.CENTER);

        wizardContainer.add(dbConnectionStep, "step1");

        queryStep.setLayout(new java.awt.BorderLayout());

        queryTextAreaContainer.setBorder(javax.swing.BorderFactory.createEmptyBorder(6, 6, 6, 6));
        queryTextAreaContainer.setLayout(new java.awt.BorderLayout(0, 10));

        jLabel11.setText(bundle.getString("INSERT_QUERY_LABEL")); // NOI18N
        queryTextAreaContainer.add(jLabel11, java.awt.BorderLayout.NORTH);

        querySQL.setColumns(20);
        querySQL.setRows(5);
        querySQLScrollPane.setViewportView(querySQL);

        queryTextAreaContainer.add(querySQLScrollPane, java.awt.BorderLayout.CENTER);

        errorTextStep2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        errorTextStep2.setForeground(new java.awt.Color(255, 51, 51));
        errorTextStep2.setText("<errore>");
        errorTextStep2.setToolTipText("");
        errorTextStep2.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        errorTextStep2.setPreferredSize(new java.awt.Dimension(54, 35));
        queryTextAreaContainer.add(errorTextStep2, java.awt.BorderLayout.SOUTH);

        queryStep.add(queryTextAreaContainer, java.awt.BorderLayout.CENTER);

        queryStepButtonContainer.setPreferredSize(new java.awt.Dimension(638, 47));
        queryStepButtonContainer.setLayout(new java.awt.BorderLayout());

        jPanel12.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 10, 5));

        abortStep2.setText(bundle.getString("CANCEL_BUTTON")); // NOI18N
        abortStep2.setPreferredSize(new java.awt.Dimension(120, 25));
        abortStep2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                abortStep2ActionPerformed(evt);
            }
        });
        jPanel12.add(abortStep2);

        backToStep1Btn.setText(bundle.getString("BACKWARD_BUTTON")); // NOI18N
        backToStep1Btn.setPreferredSize(new java.awt.Dimension(120, 25));
        backToStep1Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backToStep1BtnActionPerformed(evt);
            }
        });
        jPanel12.add(backToStep1Btn);

        queryStepButtonContainer.add(jPanel12, java.awt.BorderLayout.CENTER);

        jPanel13.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT, 10, 5));

        toStep3Btn.setText(bundle.getString("FORWARD_BUTTON")); // NOI18N
        toStep3Btn.setPreferredSize(new java.awt.Dimension(120, 25));
        toStep3Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toStep3BtnActionPerformed(evt);
            }
        });
        jPanel13.add(toStep3Btn);

        queryStepButtonContainer.add(jPanel13, java.awt.BorderLayout.EAST);

        queryStep.add(queryStepButtonContainer, java.awt.BorderLayout.SOUTH);

        wizardContainer.add(queryStep, "step2");

        queryResultStep.setLayout(new java.awt.BorderLayout(0, 5));

        queryPreviewContainer.setBorder(javax.swing.BorderFactory.createEmptyBorder(6, 6, 6, 6));
        queryPreviewContainer.setLayout(new java.awt.BorderLayout(10, 10));

        jLabel3.setText(bundle.getString("QUERY_PREVIEW_LABEL")); // NOI18N
        queryPreviewContainer.add(jLabel3, java.awt.BorderLayout.NORTH);

        queryResultScrollPane.setPreferredSize(new java.awt.Dimension(452, 202));

        queryResult.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        queryResultScrollPane.setViewportView(queryResult);

        queryPreviewContainer.add(queryResultScrollPane, java.awt.BorderLayout.CENTER);

        queryResultStep.add(queryPreviewContainer, java.awt.BorderLayout.CENTER);

        queryResultStepButtonContainer.setPreferredSize(new java.awt.Dimension(638, 47));
        queryResultStepButtonContainer.setLayout(new java.awt.BorderLayout());

        jPanel14.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 10, 5));

        abortStep3.setText(bundle.getString("CANCEL_BUTTON")); // NOI18N
        abortStep3.setPreferredSize(new java.awt.Dimension(120, 25));
        abortStep3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                abortStep3ActionPerformed(evt);
            }
        });
        jPanel14.add(abortStep3);

        backToStep2Btn.setText(bundle.getString("BACKWARD_BUTTON")); // NOI18N
        backToStep2Btn.setPreferredSize(new java.awt.Dimension(120, 25));
        backToStep2Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backToStep2BtnActionPerformed(evt);
            }
        });
        jPanel14.add(backToStep2Btn);

        queryResultStepButtonContainer.add(jPanel14, java.awt.BorderLayout.CENTER);

        jPanel15.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT, 10, 5));

        toStep4Btn.setText(bundle.getString("FORWARD_BUTTON")); // NOI18N
        toStep4Btn.setPreferredSize(new java.awt.Dimension(120, 25));
        toStep4Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toStep4BtnActionPerformed(evt);
            }
        });
        jPanel15.add(toStep4Btn);

        queryResultStepButtonContainer.add(jPanel15, java.awt.BorderLayout.EAST);

        queryResultStep.add(queryResultStepButtonContainer, java.awt.BorderLayout.SOUTH);

        wizardContainer.add(queryResultStep, "step3");

        endingStep.setLayout(new java.awt.BorderLayout(0, 40));

        jPanel16.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
        jPanel16.setLayout(new java.awt.BorderLayout(0, 15));

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText(bundle.getString("ENDING_STEP_LABEL")); // NOI18N
        jPanel16.add(jLabel13, java.awt.BorderLayout.CENTER);

        jPanel17.setLayout(new java.awt.GridLayout(3, 0));

        settingsLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        settingsLabel.setText(bundle.getString("SETTINGS_LABEL")); // NOI18N
        jPanel17.add(settingsLabel);

        saveConnectionInfo.setText(bundle.getString("RADIO_SAVE_CONNECTION_INFO")); // NOI18N
        jPanel17.add(saveConnectionInfo);

        saveInformationWarning.setText(bundle.getString("SAVE_CONNECTION_WARNING")); // NOI18N
        jPanel17.add(saveInformationWarning);

        jPanel16.add(jPanel17, java.awt.BorderLayout.SOUTH);

        endingStep.add(jPanel16, java.awt.BorderLayout.CENTER);

        endingStepButtonContainer.setPreferredSize(new java.awt.Dimension(646, 47));
        endingStepButtonContainer.setLayout(new java.awt.BorderLayout());

        jPanel18.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 10, 5));

        abortStep4.setText(bundle.getString("CANCEL_BUTTON")); // NOI18N
        abortStep4.setPreferredSize(new java.awt.Dimension(120, 25));
        abortStep4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                abortStep4ActionPerformed(evt);
            }
        });
        jPanel18.add(abortStep4);

        backToStep3Btn.setText(bundle.getString("BACKWARD_BUTTON")); // NOI18N
        backToStep3Btn.setPreferredSize(new java.awt.Dimension(120, 25));
        backToStep3Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backToStep3BtnActionPerformed(evt);
            }
        });
        jPanel18.add(backToStep3Btn);

        endingStepButtonContainer.add(jPanel18, java.awt.BorderLayout.CENTER);

        jPanel19.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT, 10, 5));

        confirmButton.setText(bundle.getString("END_BUTTON")); // NOI18N
        confirmButton.setPreferredSize(new java.awt.Dimension(120, 25));
        confirmButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmButtonActionPerformed(evt);
            }
        });
        jPanel19.add(confirmButton);

        endingStepButtonContainer.add(jPanel19, java.awt.BorderLayout.EAST);

        endingStep.add(endingStepButtonContainer, java.awt.BorderLayout.SOUTH);

        wizardContainer.add(endingStep, "step4");

        getContentPane().add(wizardContainer, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void toStep1BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toStep1BtnActionPerformed
        this.changePage(1);
    }//GEN-LAST:event_toStep1BtnActionPerformed

    private void abortStep1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_abortStep1ActionPerformed
        this.abortWizard();
    }//GEN-LAST:event_abortStep1ActionPerformed

    private void abortStep0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_abortStep0ActionPerformed
        this.abortWizard();
    }//GEN-LAST:event_abortStep0ActionPerformed

    private void toStep2BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toStep2BtnActionPerformed
        this.testConnection();
    }//GEN-LAST:event_toStep2BtnActionPerformed

    private void abortStep2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_abortStep2ActionPerformed
        this.abortWizard();
    }//GEN-LAST:event_abortStep2ActionPerformed

    private void toStep3BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toStep3BtnActionPerformed
        this.checkQuery();
    }//GEN-LAST:event_toStep3BtnActionPerformed

    private void backToStep1BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backToStep1BtnActionPerformed
        this.changePage(1);
    }//GEN-LAST:event_backToStep1BtnActionPerformed

    private void chooseJDBCDriverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseJDBCDriverActionPerformed
        JRadioButton btn = (JRadioButton) evt.getSource();
        if(btn.isSelected()){
            this.errorTextStep1.setText("");
            this.setODBCEnable(false);
            this.setJDBCEnable(true);
        }
    }//GEN-LAST:event_chooseJDBCDriverActionPerformed

    private void chooseODBCDriverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseODBCDriverActionPerformed
        JRadioButton btn = (JRadioButton) evt.getSource();
        if(btn.isSelected()){
            this.errorTextStep1.setText("");
            this.setODBCEnable(true);
            this.setJDBCEnable(false);
        }
    }//GEN-LAST:event_chooseODBCDriverActionPerformed

    private void configODBCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_configODBCActionPerformed
        if(ODBCNames.isSupportedOS()){
            ODBCSelectorDialog sel = new ODBCSelectorDialog(this);
            sel.setVisible(true);
            if(sel.isApproved()){
                dbSource = sel.getSelectedDSN();
                if(dbSource.isValid()){
                    this.odbcState.setText(dbSource.toString());
                }else this.odbcState.setText(tr("NOT_SELECTED_ODBC_SOURCE_LABEL"));
            }
        }else
            JOptionPane.showMessageDialog(this, tr("ODBC_UNSUPPORTED_OS"), 
                    tr("INFO_DIALOG_TITLE"), JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_configODBCActionPerformed

    private void jdbcDriverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jdbcDriverActionPerformed
        DriverItem item = (DriverItem) jdbcDriver.getSelectedItem();
        if(item != null){
            jdbcUrl.setText(item.getSampleUrl());
        }else jdbcUrl.setText("");
    }//GEN-LAST:event_jdbcDriverActionPerformed

    private void abortStep3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_abortStep3ActionPerformed
        this.abortWizard();
    }//GEN-LAST:event_abortStep3ActionPerformed

    private void backToStep2BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backToStep2BtnActionPerformed
        this.changePage(2);
    }//GEN-LAST:event_backToStep2BtnActionPerformed

    private void toStep4BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toStep4BtnActionPerformed
        this.changePage(4);
    }//GEN-LAST:event_toStep4BtnActionPerformed

    private void abortStep4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_abortStep4ActionPerformed
        this.abortWizard();
    }//GEN-LAST:event_abortStep4ActionPerformed

    private void backToStep3BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backToStep3BtnActionPerformed
        this.changePage(3);
    }//GEN-LAST:event_backToStep3BtnActionPerformed

    private void confirmButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmButtonActionPerformed
        this.finish();
    }//GEN-LAST:event_confirmButtonActionPerformed

    private void testDriverClassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_testDriverClassActionPerformed
        try{
            DriverItem driver = (DriverItem) this.jdbcDriver.getSelectedItem();
            if(driver != null){
                Class.forName(driver.driverClass);
                JOptionPane.showMessageDialog(this, tr("DRIVER_LOADED_CORRECTLY", driver.driverClass), tr("INFO_DIALOG_TITLE"), JOptionPane.INFORMATION_MESSAGE);
            }else 
                JOptionPane.showMessageDialog(this, tr("SELECT_DRIVER"), tr("ERROR_DIALOG_TITLE"), JOptionPane.ERROR_MESSAGE);
        }catch(ClassNotFoundException ex){
            JOptionPane.showMessageDialog(this, tr("DRIVER_LOADING_ERROR"), tr("ERROR_DIALOG_TITLE"), JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_testDriverClassActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        this.abortWizard();
    }//GEN-LAST:event_formWindowClosing

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton abortStep0;
    private javax.swing.JButton abortStep1;
    private javax.swing.JButton abortStep2;
    private javax.swing.JButton abortStep3;
    private javax.swing.JButton abortStep4;
    private javax.swing.JButton backToStep1Btn;
    private javax.swing.JButton backToStep2Btn;
    private javax.swing.JButton backToStep3Btn;
    private javax.swing.JPanel centerParameterContainer;
    private javax.swing.JRadioButton chooseJDBCDriver;
    private javax.swing.JRadioButton chooseODBCDriver;
    private javax.swing.JButton configODBC;
    private javax.swing.JButton confirmButton;
    private javax.swing.ButtonGroup connectionButtonGroup;
    private javax.swing.JPanel dbConnectionStep;
    private javax.swing.JPanel dbConnectionStepButtonPanel;
    private javax.swing.JPanel dbConnectionStepCenterPanel;
    private javax.swing.JPanel driverListContainer;
    private javax.swing.JPanel endingStep;
    private javax.swing.JPanel endingStepButtonContainer;
    private javax.swing.JLabel errorTextStep1;
    private javax.swing.JLabel errorTextStep2;
    private javax.swing.JPanel firstStep;
    private javax.swing.JPanel firstStepButtonContainer;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JComboBox jdbcDriver;
    private javax.swing.JTextField jdbcUrl;
    private javax.swing.JPanel leftParameterContainer;
    private javax.swing.JLabel odbcState;
    private javax.swing.JPanel parameterContainer;
    private javax.swing.JPasswordField password;
    private javax.swing.JPanel queryPreviewContainer;
    private javax.swing.JTable queryResult;
    private javax.swing.JScrollPane queryResultScrollPane;
    private javax.swing.JPanel queryResultStep;
    private javax.swing.JPanel queryResultStepButtonContainer;
    private javax.swing.JTextArea querySQL;
    private javax.swing.JScrollPane querySQLScrollPane;
    private javax.swing.JPanel queryStep;
    private javax.swing.JPanel queryStepButtonContainer;
    private javax.swing.JPanel queryTextAreaContainer;
    private javax.swing.JCheckBox saveConnectionInfo;
    private javax.swing.JLabel saveInformationWarning;
    private javax.swing.JLabel settingsLabel;
    private com.meserico.queryconnector.StepLabel step1;
    private com.meserico.queryconnector.StepLabel step2;
    private com.meserico.queryconnector.StepLabel step3;
    private com.meserico.queryconnector.StepLabel step4;
    private javax.swing.JLabel stepsTitle;
    private javax.swing.JButton testDriverClass;
    private javax.swing.JButton toStep1Btn;
    private javax.swing.JButton toStep2Btn;
    private javax.swing.JButton toStep3Btn;
    private javax.swing.JButton toStep4Btn;
    private javax.swing.JTextField username;
    private javax.swing.JPanel waitingPanel;
    private javax.swing.JPanel wizardContainer;
    private javax.swing.JPanel wizardSteps;
    // End of variables declaration//GEN-END:variables
        
    private void loadDrivers(){
        try{
            Document doc = DocumentBuilderFactory.newInstance().newDocumentBuilder().parse(this.getClass().getResourceAsStream("/com/meserico/queryconnector/jdbc_drivers.xml"));
            NodeList drivers = doc.getDocumentElement().getElementsByTagName("driver");
            for(int i=0; i<drivers.getLength(); i++){
                Element currentDriver = (Element) drivers.item(i);
                String label = getCDATASection(currentDriver, "label");
                String klass = getCDATASection(currentDriver, "class");
                String url = getCDATASection(currentDriver, "url");
                this.jdbcDriver.addItem(new DriverItem(label, klass, url));
            }
        }catch(Exception ex){
            ExceptionDialog.show(this, ex);
        }
    }
    
    private String getCDATASection(Element node, String name){
        Element el = (Element) node.getElementsByTagName(name).item(0);
        for(int i=0; i<el.getChildNodes().getLength(); i++){
            if(el.getChildNodes().item(i) instanceof CDATASection){
                CDATASection content = (CDATASection) el.getChildNodes().item(i);
                return content.getWholeText();
            }
        }
        return "";
    }
    
    private void clearStepLabels(){
        this.step1.setFont(this.step1.getFont().deriveFont((int) Font.PLAIN));
        this.step2.setFont(this.step2.getFont().deriveFont((int) Font.PLAIN));
        this.step3.setFont(this.step3.getFont().deriveFont((int) Font.PLAIN));
        this.step4.setFont(this.step4.getFont().deriveFont((int) Font.PLAIN));
    }
    
    private void setStep(int step){
        String stepName = "step" + step;
        for(int i=0; i<this.wizardSteps.getComponentCount(); i++){
            Component comp = this.wizardSteps.getComponent(i);
            if(comp.getName() != null && !comp.getName().equals("") && comp.getName().equals(stepName)){
                JLabel label = (JLabel) comp;
                label.setFont(label.getFont().deriveFont((int) Font.BOLD));
            }
        }
    }
    
    private void changePage(int step){
        this.clearStepLabels();
        this.setStep(step);
        this.errorTextStep1.setText("");
        this.errorTextStep2.setText("");
        CardLayout card = (CardLayout) this.wizardContainer.getLayout();
        this.lastStep = step;
        String page = "step" + step;
        card.show(this.wizardContainer, page);
    }
    
    private void setJDBCEnable(boolean state){
        jdbcDriver.setEnabled(state);
        jdbcUrl.setEnabled(state);
        username.setEnabled(state);
        password.setEnabled(state);
    }
    
    private void setODBCEnable(boolean state){
        this.configODBC.setEnabled(state);
    }
    
    private void waiting(){
        CardLayout card = (CardLayout) this.wizardContainer.getLayout();
        card.show(this.wizardContainer, "waiting");
    }
    
    private void stopWaiting(int step){
        this.changePage(step);
    }
    
    private void stopWaiting(){
        stopWaiting(this.lastStep);
    }
    
    private void abortWizard(){
        if(JOptionPane.showConfirmDialog(this, tr("ABORT_WIZARD_CONFIRM_QUESTION"), tr("ABORT_CONFIRM_DIALOG_TITLE"), JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION){
            this.dispose();
            if(this.listener != null)
                listener.wizardAborted();
        }
    }
    
    private void finish(){
        this.dispose();
        if(this.listener != null){
            listener.wizardCompleted(this.querySQL.getText(), this.connection.getDriver(), 
                this.connection.getJdbcUrl(), this.connection.getUsername(), this.connection.getPassword(),
                saveConnectionInfo.isSelected());
        }
    }
    
    private void testConnection(){
        if(this.chooseODBCDriver.isSelected()){
            if(this.dbSource.isValid()){
                this.waiting();
                connection = new DBConnection(this.dbSource);
                new TestConnection(connection).start();
            }else{
                this.errorTextStep1.setText(tr("INVALID_ODBC_LABEL"));
            }
        }else{
            this.errorTextStep1.setText("");
            if(this.jdbcUrl.getText().equals(""))
                this.errorTextStep1.setText(tr("JDBC_URL_REQUIRED"));
            else if(this.username.getText().equals("") || this.username.getText().contains(" "))
                this.errorTextStep1.setText(tr("INVALID_OR_REQUIRED_USERNAME"));
            else{
                DriverItem driver = (DriverItem) this.jdbcDriver.getSelectedItem();
                this.waiting();
                connection = new DBConnection(driver.driverClass, 
                        this.jdbcUrl.getText(), this.username.getText(), 
                        new String(this.password.getPassword()));
                new TestConnection(connection).start();
            }
        }
    }
    
    private void connectionSuccess(){
        this.stopWaiting(2);
    }
    
    private void connectionFailed(Exception ex){
        this.stopWaiting();
        this.errorTextStep1.setText(tr("CONNECTION_FAILED"));
        ExceptionDialog.show(this, ex);
    }
    
    private void showError(String msg){
        JOptionPane.showMessageDialog(this, tr("ERROR_DIALOG_TITLE"), msg, JOptionPane.ERROR_MESSAGE);
    }
    
    private void checkQuery(){
        this.errorTextStep2.setText("");
        String query = this.querySQL.getText();
        if(query.equals(""))
            this.errorTextStep2.setText(tr("QUERY_REQUIRED"));
        else{
            try{
                this.waiting();
                new QueryPreview().start();
            }catch(Exception ex){
                this.stopWaiting();
                ExceptionDialog.show(this, ex);
            }
        }
    }
    
    private void querySuccess(ResultSetTableModel tableModel){
        this.queryResult.setModel(tableModel);
        this.stopWaiting(3);
    }
    
    private void queryFailed(Exception ex){
        this.stopWaiting();
        this.errorTextStep1.setText(tr("QUERY_FAILED"));
        ExceptionDialog.show(this, ex);
    }
    
    public void modifyQuery(IQuery query){
        try{
            Class.forName(query.getDriverClass());
            querySQL.setText(query.getQuery());
            this.connection = new DBConnection(query);
            backToStep1Btn.setEnabled(false);
            this.changePage(2);
        }catch(Exception ex){
            ExceptionDialog.show(this, ex);
        }
    }
    
    public class DriverItem{
        public final String driverClass;
        public final String driverName;
        public final String urlExample;
        
        public DriverItem(String driverName, String driverClass, String urlExample){
            this.driverClass = driverClass;
            this.driverName = driverName;
            this.urlExample = urlExample;
        }
        
        @Override
        public String toString(){
            return driverName + " (" + driverClass + ")";
        }
        
        public String getSampleUrl(){
            return this.urlExample;
        }
    }
    
    private class TestConnection extends Thread {
        
        private DBConnection conn;
        
        protected TestConnection(DBConnection conn){
            this.conn = conn;
        }
        
        @Override
        public void run(){
            try{
                Connection con = conn.getConnection();
                con.close();
                connectionSuccess();
            }catch(Exception ex){
                ex.printStackTrace();
                connectionFailed(ex);
            }
        }
    }
    
    private class QueryPreview extends Thread {
        @Override
        public void run(){
            try{
                Connection con = connection.getConnection();
                Statement stmt = con.createStatement();
                ResultSet res = stmt.executeQuery(querySQL.getText());
                ResultSetTableModel tableModel = new ResultSetTableModel(res);
                res.close();
                con.close();
                querySuccess(tableModel);
            }catch(Exception ex){
                ex.printStackTrace();
                queryFailed(ex);
            }
        }
    }
}
